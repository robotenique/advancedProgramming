_,met$$$$$gg.          juliano@lysanthirDebian
,g$$$$$$$$$$$$$$$P.       -----------------------
,g$$P"     """Y$$.".        OS: Debian GNU/Linux 9.3 (stretch) x86_64
,$$P'              `$$$.     Model: X550LN 1.0
',$$P       ,ggs.     `$$b:   Kernel: 4.9.0-6-amd64
`d$$'     ,$P"'   .    $$$    Uptime: 44 minutes
$$P      d$'     ,    $$P    Packages: 3076
$$:      $$.   -    ,d$$'    Shell: zsh 5.3.1
$$;      Y$b._   _,d$P'      Resolution: 1920x1080
Y$$.    `.`"Y$$$$P"'         DE: GNOME
`$$b      "-.__              WM: GNOME Shell
`Y$$                        WM Theme: Adwaita
`Y$$.                      Theme: Adwaita [GTK2/3]
`$$b.                    Icons: Adwaita [GTK2/3]
`Y$$b.                 Terminal: gnome-terminal
   `"Y$b._             CPU: Intel i5-4210U (4) @ 2.7GHz
       `"""            GPU: NVIDIA GeForce 840M
                       Memory: 3419MB / 5855MB
Casos:
Bakery distribui melhor que o gate em praticamente todos os casos
Não consegui perceber o 'overhead' do Bakery para poucos processos. Talvez esse overhead não faça tanta diferença na minha máquina.




t1: 10 threads , tempo: 5000000, SCHED_OTHER
    -> Caso um pouco ruim para o Bakery, algumas threads no final entraram menos vezes. O desvio padrão foi de: ''
    -> O Gate a entrada na SC é bem menos balanceada, mas os processos entraram um número razoável de vezes. O desvio padrão foi de: ''

    10 threads , tempo: 5000000, SCHED_RR
    -> O Bakery melhora bastante ao mudarmos o scheduler para o Round Robin, ficando praticamente "constante" a quantidade de vezes que cada thread entra na SC, bem justo. Desvio padrão foi de ''
    -> Embora o Gate ainda tenha algumas threads que entram bem menos na SC, ao usar o RR a quantidade de vezes que elas entram na SC ficou mais uniforme, embora ainda entrem pouco. Desvio padrão foi de ''

t2: 100 threads, tempo: 5000000, SCHED_OTHER
    -> Com mais threads, o Bakery vai se tornando mais parecido com o Gate, porque poucas threads entram várias vezes na SC, por causa do Scheduler.
    -> Gate fica pior ainda.
